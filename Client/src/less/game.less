@red: #DF151A;
@blue: #00CBE7;
@green: #00DA3C;
@yellow: #F4F328;

@tileSize: 100px;
@gridSpacing: 15px;
@gridCount: 4;

@gridSize: ((@gridCount + 1) * @gridSpacing) + (@gridCount * @tileSize);

@pallete-1: #A8A39D;
@pallete-2: #D8C8B8;
@pallete-3: #8D7966;
@pallete-4: #F8F1E9;

@gameTick: 200ms;

body {
    color: @pallete-3;
    background-color: @pallete-4;
}

.game-title {
    margin-top: 25px;
    text-align: center;
    font-size: 2.5em;
    font-weight: 900;
}
.game-container {
    width: @gridSize;
    height: @gridSize;
    padding: @gridSpacing;
    margin-top: 25px;
    margin-left: auto;
    margin-right: auto;
    border-radius: 5px;
    background-color: @pallete-1;
}
.grid-container {
    position: absolute;
    z-index: 1;
}
.grid-row {
    display: flex;
    flex-wrap: nowrap;
    margin-bottom: @gridSpacing;
}
.grid-row:after {
    content: "";
    display: block;
    clear: both;
}
.grid-row:last-child {
    margin-bottom: 0px;
}
.grid-cell {
    width: @tileSize;
    height: @tileSize;
    margin-right: @gridSpacing;
    background-color: @pallete-2;
    border-radius: 5px;
    float: left;
}
.grid-cell:last-child {
    margin-right: 0px;
}
.game-info-container {
    margin-top: 25px;
    width: @gridSize;
    margin-right: auto;
    margin-left: auto;
}
.player-turn {
    position:absolute;
    clear:both;
    display: block;
    padding-top: 0.25em;
    font-size: 2em;
    font-weight: 900;
    text-align: center;
    width: @gridSize;
    height:3.2em;
}
.player-1-score {
    display: inline;
    padding-left: @gridSize / 7;
    float: left;
    font-size: 3em;
    font-weight: 900;
}
.player-2-score {
    float: right;
    padding-right: @gridSize / 7;
    display: inline;
    font-size: 3em;
    font-weight: 900;
}

.tile-container {
    position: absolute;
    z-index: 2;
}
.tile {
    position: inherit;
    width: @tileSize;
    height: @tileSize;
    border-radius: 5px;
    transition: transform @gameTick ease-in-out;
    z-index: 3;
}

.tile-red {
    background-color: @red;
}
.tile-blue {
    background-color: @blue;
}
.tile-green {
    background-color: @green;
}
.tile-yellow {
    background-color: @yellow;
}

.generate-columns(@x, @y) when (@y < @gridCount) {
    .tile-position-@{x}-@{y} {
        transform: translate(((@y * @tileSize) + (@y * @gridSpacing)), ((@x * @tileSize) + (@x * @gridSpacing)));         
    }
    .generate-columns(@x, @y + 1)
}

.generate-rows(@x) when (@x < @gridCount) {
    .generate-columns(@x, 0);
    .generate-rows(@x + 1);
}

.generate-rows(0);

.tile-new {
    animation: newTileFadeIn @gameTick ease @gameTick/2;
    animation-fill-mode: backwards;
}

.score-pop-up {
    position: inherit;
    display: inline-block;
    width: @tileSize;
    height: @tileSize;
    border-radius: 5px;
    z-index: 4;
    
    font-size: 2.5em;
    font-weight: 900;
    vertical-align: center;
    text-align: center;
    color: #FFF;
    line-height: @tileSize;
    text-shadow: black 1px 1px;
    
    animation: scoreFadeOut @gameTick * 5;
    animation-fill-mode: forwards;
}


.end-game-overlay {

    background-color: #FFF;
    z-index: 5;
    position: relative;
    opacity: 0.8;
    border-radius: 5px;
    margin-right: auto;
    margin-left: auto;

    width: @gridSize * 4 / 5;
    height:  @gridSize / 5;

    font-size: 2em;
    font-weight: 900;
    vertical-align: center;
    text-align: center;
    line-height: @gridSize / 5;
    text-shadow: black 1px 1px;

    animation: overlayFloatUp @gameTick * 5;
    animation-fill-mode: forwards;
}

.game-rules {
    width: @gridSize;
    height: 200px;
    margin-top: 100px;

    font-size: 1.2em;
    text-align: center;

    border-radius: 5px;
    margin-right: auto;
    margin-left: auto;
}
@keyframes newTileFadeIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

@keyframes scoreFadeOut {
    0% {
        opacity: 1;
        font-size: 2.5em;
    }
    100% {
        opacity: 0;
        font-size: 5em;
    }
}

@keyframes overlayFloatUp {
    0% {
        transform: translateY(@gridSize * 3 / 5);
    }
    100% {
        transform: translateY(@gridSize * 2 / 5);
    }
}